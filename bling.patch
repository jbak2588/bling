diff --git a/assets/lang/en.json b/assets/lang/en.json
index 0fd15b32821f069d72e536a64185c6a90c77c3c2..a8a97c748549bc350fd4cfc6d615d0da77737589 100644
--- a/assets/lang/en.json
+++ b/assets/lang/en.json
@@ -748,29 +748,45 @@
         },
         "form": {
             "nameLabel": "Shop Name",
             "nameError": "Please enter the shop name.",
             "descriptionLabel": "Shop Description",
             "descriptionError": "Please enter the shop description.",
             "contactLabel": "Contact",
             "hoursLabel": "Business Hours",
             "hoursHint": "e.g. 09:00 - 18:00"
         },
         "detail": {
             "description": "Shop Description",
             "deleteTitle": "Delete Shop",
             "deleteContent": "Are you sure you want to delete this shop? This action cannot be undone.",
             "deleteTooltip": "Delete shop",
             "delete": "Delete",
             "cancel": "Cancel",
             "deleteSuccess": "Shop deleted.",
             "deleteFail": "Failed to delete shop: {error}",
             "inquire": "Contact",
             "noOwnerInfo": "Owner info not found",
             "startChatFail": "Could not start chat: {error}"
         },
         "noLocation": "No location info"
     },
+    "pom": {
+        "share": "Share",
+        "empty": "No POMs have been uploaded yet.",
+        "errors": {
+            "fetchFailed": "An error has occurred: {error}"
+        },
+        "create": {
+            "title": "Upload New POM",
+            "submit": "Upload",
+            "success": "POM uploaded.",
+            "fail": "Failed to upload POM: {error}",
+            "form": {
+                "descriptionLabel": "Video description"
+            }
+        }
+    },
     "community": {
         "title": "Community Screen"
     }
 }
\ No newline at end of file
diff --git a/assets/lang/id.json b/assets/lang/id.json
index 0840b46155432642a3ebd28f03b44352b22ced16..b56e3a310a96beea2d7509f081c4895efe83d015 100644
--- a/assets/lang/id.json
+++ b/assets/lang/id.json
@@ -748,29 +748,45 @@
         },
         "form": {
             "nameLabel": "Nama Toko",
             "nameError": "Harap masukkan nama toko.",
             "descriptionLabel": "Deskripsi Toko",
             "descriptionError": "Harap masukkan deskripsi toko.",
             "contactLabel": "Kontak",
             "hoursLabel": "Jam Operasional",
             "hoursHint": "mis. 09:00 - 18:00"
         },
         "detail": {
             "description": "Deskripsi Toko",
             "deleteTitle": "Hapus Toko",
             "deleteContent": "Apakah Anda yakin ingin menghapus toko ini? Tindakan ini tidak dapat dibatalkan.",
             "deleteTooltip": "Hapus toko",
             "delete": "Hapus",
             "cancel": "Batal",
             "deleteSuccess": "Toko telah dihapus.",
             "deleteFail": "Gagal menghapus toko: {error}",
             "inquire": "Hubungi",
             "noOwnerInfo": "Info pemilik tidak ada",
             "startChatFail": "Tidak dapat memulai chat: {error}"
         },
         "noLocation": "Tidak ada info lokasi"
     },
+    "pom": {
+        "share": "Bagikan",
+        "empty": "Belum ada POM yang diunggah.",
+        "errors": {
+            "fetchFailed": "Terjadi kesalahan: {error}"
+        },
+        "create": {
+            "title": "Unggah POM Baru",
+            "submit": "Unggah",
+            "success": "POM berhasil diunggah.",
+            "fail": "Gagal mengunggah POM: {error}",
+            "form": {
+                "descriptionLabel": "Deskripsi video"
+            }
+        }
+    },
     "community": {
         "title": "Halaman Komunitas"
     }
 }
\ No newline at end of file
diff --git a/assets/lang/ko.json b/assets/lang/ko.json
index 3e71e5df1918b97f8a5655049ab0d24b6f9ee19c..8899b34a8853dc2754cc6034433b0f2486158873 100644
--- a/assets/lang/ko.json
+++ b/assets/lang/ko.json
@@ -747,29 +747,45 @@
         },
         "form": {
             "nameLabel": "상점 이름",
             "nameError": "상점 이름을 입력해주세요.",
             "descriptionLabel": "상점 소개",
             "descriptionError": "상점 소개를 입력해주세요.",
             "contactLabel": "연락처",
             "hoursLabel": "영업 시간",
             "hoursHint": "예) 09:00 - 18:00"
         },
         "detail": {
             "description": "상점 소개",
             "deleteTitle": "상점 삭제",
             "deleteContent": "정말로 이 상점을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.",
             "deleteTooltip": "상점 삭제",
             "delete": "삭제",
             "cancel": "취소",
             "deleteSuccess": "상점이 삭제되었습니다.",
             "deleteFail": "상점 삭제에 실패했습니다: {error}",
             "inquire": "문의하기",
             "noOwnerInfo": "주인 정보 없음",
             "startChatFail": "채팅을 시작할 수 없습니다: {error}"
         },
         "noLocation": "위치 정보 없음"
     },
+    "pom": {
+        "share": "공유",
+        "empty": "등록된 POM이 없습니다.",
+        "errors": {
+            "fetchFailed": "오류가 발생했습니다: {error}"
+        },
+        "create": {
+            "title": "새 POM 등록",
+            "submit": "등록",
+            "success": "POM이 등록되었습니다.",
+            "fail": "POM 등록에 실패했습니다: {error}",
+            "form": {
+                "descriptionLabel": "영상 설명"
+            }
+        }
+    },
     "community": {
         "title": "커뮤니티 화면"
     }
 }
\ No newline at end of file
diff --git a/lib/features/pom/screens/create_short_screen.dart b/lib/features/pom/screens/create_short_screen.dart
index 51a6cf0ad3136d5b1860e38a63772279d74a96b2..1652639660720b4a39540e02059545047c14150b 100644
--- a/lib/features/pom/screens/create_short_screen.dart
+++ b/lib/features/pom/screens/create_short_screen.dart
@@ -1,38 +1,39 @@
 // lib/features/pom/screens/create_short_screen.dart
 
 import 'dart:io';
 import 'package:bling_app/core/models/short_model.dart';
 import 'package:bling_app/core/models/user_model.dart';
 import 'package:bling_app/features/pom/data/short_repository.dart';
 import 'package:cloud_firestore/cloud_firestore.dart';
 import 'package:firebase_auth/firebase_auth.dart';
 import 'package:firebase_storage/firebase_storage.dart';
 import 'package:flutter/material.dart';
 import 'package:image_picker/image_picker.dart';
 import 'package:uuid/uuid.dart';
 import 'package:video_player/video_player.dart';
+import 'package:easy_localization/easy_localization.dart';
 
 class CreateShortScreen extends StatefulWidget {
   final UserModel userModel;
   const CreateShortScreen({super.key, required this.userModel});
 
   @override
   State<CreateShortScreen> createState() => _CreateShortScreenState();
 }
 
 class _CreateShortScreenState extends State<CreateShortScreen> {
   final _descriptionController = TextEditingController();
   final ShortRepository _repository = ShortRepository();
   final ImagePicker _picker = ImagePicker();
 
   XFile? _videoFile;
   VideoPlayerController? _videoController;
   bool _isSaving = false;
 
   @override
   void dispose() {
     _descriptionController.dispose();
     _videoController?.dispose();
     super.dispose();
   }
 
@@ -60,89 +61,90 @@ class _CreateShortScreenState extends State<CreateShortScreen> {
 
     try {
       // 1. 비디오를 Firebase Storage에 업로드
       final fileName = const Uuid().v4();
       final ref = FirebaseStorage.instance.ref().child('shorts/${user.uid}/$fileName.mp4');
       final uploadTask = ref.putFile(File(_videoFile!.path));
       final snapshot = await uploadTask.whenComplete(() {});
       final videoUrl = await snapshot.ref.getDownloadURL();
 
       // 2. ShortModel 생성
       final newShort = ShortModel(
         id: '',
         userId: user.uid,
         videoUrl: videoUrl,
         title: _descriptionController.text.trim(), // You may want a separate title field
         thumbnailUrl: '', // Provide a valid thumbnail URL if available
         description: _descriptionController.text.trim(),
         location: widget.userModel.locationName ?? 'Unknown',
         createdAt: Timestamp.now(),
       );
 
       // 3. Firestore에 저장
       await _repository.createShort(newShort);
 
       if (mounted) {
-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('POM이 등록되었습니다.'), backgroundColor: Colors.green));
+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('pom.create.success'.tr()), backgroundColor: Colors.green));
         Navigator.of(context).pop();
       }
     } catch (e) {
       if (mounted) {
-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('등록에 실패했습니다: $e'), backgroundColor: Colors.red));
+        ScaffoldMessenger.of(context).showSnackBar(
+            SnackBar(content: Text('pom.create.fail'.tr(namedArgs: {'error': e.toString()})), backgroundColor: Colors.red));
       }
     } finally {
       if (mounted) setState(() => _isSaving = false);
     }
   }
 
   @override
   Widget build(BuildContext context) {
     return Scaffold(
       appBar: AppBar(
-        title: Text('새 POM 등록'), // TODO: 다국어
+        title: Text('pom.create.title'.tr()),
         actions: [
           if (!_isSaving)
-            TextButton(onPressed: _submitShort, child: Text('등록')), // TODO: 다국어
+            TextButton(onPressed: _submitShort, child: Text('pom.create.submit'.tr())),
         ],
       ),
       body: Stack(
         children: [
           ListView(
             padding: const EdgeInsets.all(16.0),
             children: [
               GestureDetector(
                 onTap: _pickVideo,
                 child: Container(
                   height: 300,
                   decoration: BoxDecoration(
                     border: Border.all(color: Colors.grey.shade300),
                     borderRadius: BorderRadius.circular(12),
                   ),
                   child: (_videoController != null && _videoController!.value.isInitialized)
                       ? ClipRRect(
                           borderRadius: BorderRadius.circular(12),
                           child: AspectRatio(
                             aspectRatio: _videoController!.value.aspectRatio,
                             child: VideoPlayer(_videoController!),
                           ),
                         )
                       : const Center(child: Icon(Icons.video_call_outlined, size: 60, color: Colors.grey)),
                 ),
               ),
               const SizedBox(height: 24),
               TextField(
                 controller: _descriptionController,
-                decoration: const InputDecoration(
-                  labelText: '영상 설명', // TODO: 다국어
-                  border: OutlineInputBorder(),
+                decoration: InputDecoration(
+                  labelText: 'pom.create.form.descriptionLabel'.tr(),
+                  border: const OutlineInputBorder(),
                 ),
                 maxLines: 3,
               ),
             ],
           ),
           if (_isSaving)
             Container(color: Colors.black.withValues(alpha: 0.5), child: const Center(child: CircularProgressIndicator())),
         ],
       ),
     );
   }
 }
