diff --git a/assets/lang/en.json b/assets/lang/en.json
index d5895e8d9ae39230d0eba3956f90df9f168b96ca..e0d3142429ab4bf3aa7613d9a0840b210fe3d586 100644
--- a/assets/lang/en.json
+++ b/assets/lang/en.json
@@ -355,28 +355,37 @@
 
     "common": {
         "cancel": "Cancel",
         "delete": "Delete"
     },
     "deleteConfirm": {
         "title": "Delete Comment",
         "content": "Are you sure you want to delete this comment?",
         "failure": "Failed to delete comment: {error}"
     },
 
     "replyInputField": {
         "hintText": "Enter a reply",
         "button": {
             "send": "Send"
         },
         "failure": "Failed to add reply: {error}"
     },
 
     "chat_list": {
         "appBarTitle": "Chat",
         "empty": "There are no ongoing conversations."
     },
     "chat_room": {
         "placeholder": "Enter a message..."
+    },
+    "jobs": {
+        "form": {
+            "titleHint": "Job title",
+            "descriptionHint": "Describe the position",
+            "categoryHint": "Category",
+            "locationHint": "Location",
+            "submit": "Post Job"
+        }
     }
-    
+
 }
\ No newline at end of file
diff --git a/assets/lang/id.json b/assets/lang/id.json
index bafee70477999cfb47ef2449799a90148a0ca5e9..867119d791bd834a7fa39e32dff496b234a6c961 100644
--- a/assets/lang/id.json
+++ b/assets/lang/id.json
@@ -354,29 +354,37 @@
 
     "common": {
         "cancel": "Batal",
         "delete": "Hapus"
     },
     "deleteConfirm": {
         "title": "Hapus Komentar",
         "content": "Apakah Anda yakin ingin menghapus komentar ini?",
         "failure": "Gagal menghapus komentar: {error}"
     },
 
     "replyInputField": {
         "hintText": "Masukkan balasan",
         "button": {
             "send": "Kirim"
         },
         "failure": "Gagal menambahkan balasan: {error}"
     },
 
     "chat_list": {
         "appBarTitle": "Obrolan",
         "empty": "Belum ada percakapan."
     },
     "chat_room": {
         "placeholder": "Ketik pesan..."
+    },
+    "jobs": {
+        "form": {
+            "titleHint": "Judul pekerjaan",
+            "descriptionHint": "Deskripsikan posisi",
+            "categoryHint": "Kategori",
+            "locationHint": "Lokasi",
+            "submit": "Pasang Lowongan"
+        }
     }
 
-
 }
\ No newline at end of file
diff --git a/assets/lang/ko.json b/assets/lang/ko.json
index 8e4d1c3a3641f07240cb9cbf7335469024c5b16f..37708d9d23859a669a186a7a1af7349dc0ddd314 100644
--- a/assets/lang/ko.json
+++ b/assets/lang/ko.json
@@ -342,28 +342,37 @@
 
     "common": {
         "cancel": "취소",
         "delete": "삭제"
     },
     "deleteConfirm": {
         "title": "댓글 삭제",
         "content": "정말 이 댓글을 삭제하시겠습니까?",
         "failure": "댓글 삭제 실패: {error}"
     },
 
     "replyInputField": {
         "hintText": "답글을 입력하세요",
         "button": {
             "send": "전송"
         },
         "failure": "답글 등록 실패: {error}"
     },
 
     "chat_list": {
         "appBarTitle": "채팅",
         "empty": "진행중인 대화가 없습니다."
     },
     "chat_room": {
         "placeholder": "메시지를 입력하세요..."
+    },
+    "jobs": {
+        "form": {
+            "titleHint": "공고 제목",
+            "descriptionHint": "업무 내용을 입력",
+            "categoryHint": "직종 카테고리",
+            "locationHint": "근무 위치",
+            "submit": "구인 등록"
+        }
     }
 
 }
\ No newline at end of file
diff --git a/lib/features/jobs/data/job_repository.dart b/lib/features/jobs/data/job_repository.dart
index 80014f8185af6575169df899db2df3cbe86a4131..aaa86d17ca6ead4f41417bfe87dcaef47a2a9b3b 100644
--- a/lib/features/jobs/data/job_repository.dart
+++ b/lib/features/jobs/data/job_repository.dart
@@ -1,37 +1,46 @@
 // lib/features/jobs/data/job_repository.dart
 
+import 'package:cloud_firestore/cloud_firestore.dart';
+
 import '../../../core/models/job_model.dart';
 
-/// Repository for managing local job listings.
-/// All CRUD operations here operate on an in-memory list
-/// rather than a remote database.
+/// Repository for managing job posts in the Jobs module.
+///
+/// This class was originally an in-memory placeholder. It now
+/// uses Firestore so that job listings are shared across devices.
 class JobRepository {
-  final List<JobModel> _jobs = [];
+  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
+
+  CollectionReference<Map<String, dynamic>> get _jobsCollection =>
+      _firestore.collection('jobs');
 
-  Future<void> createJob(JobModel job) async {
-    _jobs.add(job);
+  /// Creates a new job document and returns its ID.
+  Future<String> createJob(JobModel job) async {
+    final doc = await _jobsCollection.add(job.toJson());
+    return doc.id;
   }
 
-  Future<List<JobModel>> readJobs() async {
-    return _jobs;
+  /// Fetches all jobs ordered by creation date.
+  Stream<List<JobModel>> readJobs() {
+    return _jobsCollection
+        .orderBy('createdAt', descending: true)
+        .snapshots()
+        .map((snap) => snap.docs.map(JobModel.fromFirestore).toList());
   }
 
-  Future<JobModel?> readJob(String id) async {
-    try {
-      return _jobs.firstWhere((j) => j.id == id);
-    } catch (_) {
-      return null;
-    }
+  /// Fetches a single job by document ID.
+  Future<JobModel> readJob(String id) async {
+    final doc = await _jobsCollection.doc(id).get();
+    return JobModel.fromFirestore(doc);
   }
 
+  /// Updates an existing job document.
   Future<void> updateJob(JobModel job) async {
-    final index = _jobs.indexWhere((j) => j.id == job.id);
-    if (index != -1) {
-      _jobs[index] = job;
-    }
+    await _jobsCollection.doc(job.id).update(job.toJson());
   }
 
+  /// Deletes a job document by ID.
   Future<void> deleteJob(String id) async {
-    _jobs.removeWhere((j) => j.id == id);
+    await _jobsCollection.doc(id).delete();
   }
 }
