diff --git a/lib/core/models/club_member_model.dart b/lib/core/models/club_member_model.dart
new file mode 100644
index 0000000000000000000000000000000000000000..b381d8787db5c7eb7cda9c6519ec99753798f645
--- /dev/null
+++ b/lib/core/models/club_member_model.dart
@@ -0,0 +1,34 @@
+// lib/core/models/club_member_model.dart
+
+import 'package:cloud_firestore/cloud_firestore.dart';
+
+/// Represents a user who has joined a specific club. Stored under
+/// `clubs/{clubId}/members` subcollection.
+class ClubMemberModel {
+  final String id;
+  final String userId;
+  final Timestamp joinedAt;
+
+  ClubMemberModel({
+    required this.id,
+    required this.userId,
+    required this.joinedAt,
+  });
+
+  factory ClubMemberModel.fromFirestore(
+      DocumentSnapshot<Map<String, dynamic>> doc) {
+    final data = doc.data() ?? {};
+    return ClubMemberModel(
+      id: doc.id,
+      userId: data['userId'] ?? '',
+      joinedAt: data['joinedAt'] ?? Timestamp.now(),
+    );
+  }
+
+  Map<String, dynamic> toJson() {
+    return {
+      'userId': userId,
+      'joinedAt': joinedAt,
+    };
+  }
+}
diff --git a/lib/core/models/club_model.dart b/lib/core/models/club_model.dart
new file mode 100644
index 0000000000000000000000000000000000000000..0863510e49b443cf8d612d5825a9a1d5c9154945
--- /dev/null
+++ b/lib/core/models/club_model.dart
@@ -0,0 +1,63 @@
+// lib/core/models/club_model.dart
+
+import 'package:cloud_firestore/cloud_firestore.dart';
+
+/// Represents a local community club where neighbors gather around
+/// common interests. Each document in the `clubs` collection maps
+/// to one instance of this model.
+class ClubModel {
+  final String id;
+  final String title;
+  final String description;
+  final String ownerId;
+  final String location;
+  final List<String> interests;
+  final int membersCount;
+  final bool isPrivate;
+  final String trustLevelRequired;
+  final Timestamp createdAt;
+
+  ClubModel({
+    required this.id,
+    required this.title,
+    required this.description,
+    required this.ownerId,
+    required this.location,
+    required this.interests,
+    this.membersCount = 0,
+    this.isPrivate = false,
+    this.trustLevelRequired = 'normal',
+    required this.createdAt,
+  });
+
+  factory ClubModel.fromFirestore(DocumentSnapshot<Map<String, dynamic>> doc) {
+    final data = doc.data() ?? {};
+    return ClubModel(
+      id: doc.id,
+      title: data['title'] ?? '',
+      description: data['description'] ?? '',
+      ownerId: data['ownerId'] ?? '',
+      location: data['location'] ?? '',
+      interests:
+          data['interests'] != null ? List<String>.from(data['interests']) : [],
+      membersCount: data['membersCount'] ?? 0,
+      isPrivate: data['isPrivate'] ?? false,
+      trustLevelRequired: data['trustLevelRequired'] ?? 'normal',
+      createdAt: data['createdAt'] ?? Timestamp.now(),
+    );
+  }
+
+  Map<String, dynamic> toJson() {
+    return {
+      'title': title,
+      'description': description,
+      'ownerId': ownerId,
+      'location': location,
+      'interests': interests,
+      'membersCount': membersCount,
+      'isPrivate': isPrivate,
+      'trustLevelRequired': trustLevelRequired,
+      'createdAt': createdAt,
+    };
+  }
+}
diff --git a/lib/features/clubs/data/club_repository.dart b/lib/features/clubs/data/club_repository.dart
new file mode 100644
index 0000000000000000000000000000000000000000..2a20a5e6c043caffb92bb2bdfd872b50e9cc03d1
--- /dev/null
+++ b/lib/features/clubs/data/club_repository.dart
@@ -0,0 +1,67 @@
+// lib/features/clubs/data/club_repository.dart
+
+import 'package:cloud_firestore/cloud_firestore.dart';
+
+import '../../../core/models/club_member_model.dart';
+import '../../../core/models/club_model.dart';
+
+/// Handles CRUD operations for community clubs and their members.
+class ClubRepository {
+  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
+
+  Future<String> createClub(ClubModel club) async {
+    final docRef = await _firestore.collection('clubs').add(club.toJson());
+    return docRef.id;
+  }
+
+  Future<void> updateClub(ClubModel club) async {
+    await _firestore.collection('clubs').doc(club.id).update(club.toJson());
+  }
+
+  Future<void> deleteClub(String clubId) async {
+    await _firestore.collection('clubs').doc(clubId).delete();
+  }
+
+  Future<ClubModel> fetchClub(String clubId) async {
+    final doc = await _firestore.collection('clubs').doc(clubId).get();
+    return ClubModel.fromFirestore(doc);
+  }
+
+  Stream<List<ClubModel>> fetchClubs() {
+    return _firestore
+        .collection('clubs')
+        .orderBy('createdAt', descending: true)
+        .snapshots()
+        .map((snapshot) =>
+            snapshot.docs.map(ClubModel.fromFirestore).toList());
+  }
+
+  Future<void> addMember(String clubId, ClubMemberModel member) async {
+    await _firestore
+        .collection('clubs')
+        .doc(clubId)
+        .collection('members')
+        .doc(member.id)
+        .set(member.toJson());
+  }
+
+  Future<void> removeMember(String clubId, String memberId) async {
+    await _firestore
+        .collection('clubs')
+        .doc(clubId)
+        .collection('members')
+        .doc(memberId)
+        .delete();
+  }
+
+  Stream<List<ClubMemberModel>> fetchMembers(String clubId) {
+    return _firestore
+        .collection('clubs')
+        .doc(clubId)
+        .collection('members')
+        .orderBy('joinedAt', descending: true)
+        .snapshots()
+        .map((snapshot) =>
+            snapshot.docs.map(ClubMemberModel.fromFirestore).toList());
+  }
+}
